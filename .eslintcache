[{"D:\\react\\QR_Scanner\\Qr_scanner\\src\\index.js":"1","D:\\react\\QR_Scanner\\Qr_scanner\\src\\reportWebVitals.js":"2","D:\\react\\QR_Scanner\\Qr_scanner\\src\\App.js":"3"},{"size":517,"mtime":1618937163661,"results":"4","hashOfConfig":"5"},{"size":375,"mtime":1618937163868,"results":"6","hashOfConfig":"5"},{"size":3207,"mtime":1618979896424,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"sau7ci",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"10"},"D:\\react\\QR_Scanner\\Qr_scanner\\src\\index.js",[],["17","18"],"D:\\react\\QR_Scanner\\Qr_scanner\\src\\reportWebVitals.js",[],["19","20"],"D:\\react\\QR_Scanner\\Qr_scanner\\src\\App.js",["21","22","23","24"],"import React, {useState, useRef} from 'react';\r\nimport {Container, Card, CardContent, makeStyles, Grid, TextField, Button} from '@material-ui/core';\r\nimport QRCode from 'qrcode';\r\nimport QrReader from 'react-qr-reader';\r\n\r\n\r\nfunction App() { \r\n  const [text, setText] = useState('');\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [scanResultFile, setScanResultFile] = useState('');\r\n  const [scanResultWebCam, setScanResultWebCam] =  useState('');\r\n  const classes = useStyles();\r\n  const qrRef = useRef(null);\r\n\r\n\r\n  const generateQrCode = async () => {\r\n    try {\r\n          const response = await QRCode.toDataURL(text);\r\n          setImageUrl(response);\r\n    }catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  const handleErrorFile = (error) => {\r\n    console.log(error);\r\n  }\r\n  const handleScanFile = (result) => {\r\n    console.log(\".....\",result)\r\n      if (result) {\r\n          setScanResultFile(result);\r\n      }\r\n  }\r\n  const onScanFile = () => {\r\n    // debugger\r\n    qrRef.current.openImageDialog();\r\n  }\r\n  const handleErrorWebCam = (error) => {\r\n    console.log(error);\r\n  }\r\n  const handleScanWebCam = (result) => {\r\n    if (result){\r\n        setScanResultWebCam(result);\r\n    }\r\n   }\r\n  return (\r\n    <Container className={classes.conatiner}>\r\n          <Card>\r\n              <h2 className={classes.title}> Scan QR Code </h2>\r\n              <CardContent>\r\n                  <Grid container spacing={2}>\r\n                \r\n                      <Grid item xl={4} lg={6} md={6} sm={12} xs={12}>\r\n                        <Button style={{marginLeft:'20%'}} className={classes.btn} variant=\"contained\" color=\"secondary\" onClick={onScanFile}>Scan Qr Code</Button>\r\n                        <QrReader\r\n                          ref={qrRef}\r\n                          delay={300}\r\n                          style={{width: '70%',marginLeft:'20%'}}\r\n                          onError={handleErrorFile}\r\n                          onScan={handleScanFile}\r\n                          legacyMode\r\n                        />\r\n                        <h3 style={{marginLeft:'20%'}}>Scanned Code: {scanResultFile}</h3>\r\n                      </Grid>\r\n                      <Grid item xl={4} lg={6} md={6} sm={12} xs={12}>\r\n                         <h3 style={{marginLeft:'10%'}}>Qr Code Scan by Web Cam</h3>\r\n                         <QrReader\r\n                         delay={300}\r\n                         style={{width: '70%',marginLeft:'10%'}}\r\n                         onError={handleErrorWebCam}\r\n                         onScan={handleScanWebCam}\r\n                         />\r\n                         <h3 style={{marginLeft:'10%'}}> Scanned By WebCam Code: {scanResultWebCam}</h3>\r\n                      </Grid>\r\n                  </Grid>\r\n              </CardContent>\r\n          </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    conatiner: {\r\n      marginTop: 10\r\n    },\r\n    title: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems:  'center',\r\n      background: '#3f51b5',\r\n      color: '#fff',\r\n      padding: 20\r\n    },\r\n    btn : {\r\n      marginTop: 10,\r\n      marginBottom: 20\r\n    }\r\n}));\r\nexport default App;\r\n",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"25","replacedBy":"29"},{"ruleId":"27","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":2,"column":57,"nodeType":"33","messageId":"34","endLine":2,"endColumn":66},{"ruleId":"31","severity":1,"message":"35","line":8,"column":16,"nodeType":"33","messageId":"34","endLine":8,"endColumn":23},{"ruleId":"31","severity":1,"message":"36","line":9,"column":10,"nodeType":"33","messageId":"34","endLine":9,"endColumn":18},{"ruleId":"31","severity":1,"message":"37","line":16,"column":9,"nodeType":"33","messageId":"34","endLine":16,"endColumn":23},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],["38"],["39"],"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","'setText' is assigned a value but never used.","'imageUrl' is assigned a value but never used.","'generateQrCode' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]